<div class="row" id="lessons" data-fetch-url="{{ urlFor('api:lessons:teaching') }}" data-delete-url="{{ urlFor('api:lessons:delete') }}" data-save-url="{{ urlFor('api:lessons:modify') }}">
    <div class="row">
        <div class="col s12">
            <div class="z-depth-1 padded-box">
                <div class="row">
                    <h1 class="lesson-add-header col s12" :data-text="isEditing ? 'Edit' : 'Add'"> lesson</h1>
                </div>
                <div class="row">
                    <form class="col s12" action="{{ urlFor('api:lessons:modify') }}" method="POST" style="padding: 0 2em;">
                        <div class="row">
                            <div class="col s12 m6 input-field">
                                <input type="text" name="lesson" id="new-lesson" v-model="newLesson" :disabled="loading">
                                <label for="new-lesson">Lesson name</label>
                            </div>
                            <div class="col s12 m6 input-field" v-show="lessonEditing">
                                <input type="text" id="datepicker" :value="(lessonEditing || { 'due' : null }).due | formatDate">
                                <label class="active">Due date</label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col s12 right-align">
                                <button class="btn btn-large right" style="margin-left: 1em;"
                                        :class="{ 'btn-loading': loading && !deleting, 'btn-error': error, 'btn-success': success }"
                                        :disabled="!newLesson || deleting"
                                        @click.prevent="saveLesson">
                                    <i class="material-icons left">save</i>
                                    {{ '{{' }}isEditing ? 'Edit' : 'Add'{{ '}}' }}
                                </button>
                                <button class="btn btn-large red" style="margin-right: .7em;"
                                        :class="{ 'btn-loading': deleting, 'btn-success': deleted, 'btn-error': deletedError }"
                                        :disabled="!(newLesson || lessonEditing) || (loading && !deleting)"
                                        v-if="lessonEditing"
                                        @click.prevent="deleteLesson">
                                    <i class="material-icons left">delete</i> Delete
                                </button>
                                <button class="btn btn-large yellow black-text"
                                        :disabled="!(newLesson || lessonEditing) || loading"
                                        @click.prevent="cancelLesson">
                                    <i class="material-icons left">cancel</i> Cancel
                                </button>
                            </div>
                        </div>
                        <input type="hidden" name="{{ csrf_key }}" value="{{ csrf_token }}">
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col s12">
            <div class="z-depth-1 padded-box">
                <div class="row">
                    <h1 class="col s12">Your classes:
                        <span style="padding-left: 1em;padding-top: 2em;font-size: 15px;line-height: 1.1em;opacity: .3;">(Click to edit)</span></h1>
                </div>
                <div class="row lessons-attending">
                    <div class="col s6 m3 l2"
                         :data-subject="lesson.id" :class="{'is-edited': lesson.isEdited}"
                         @click="editLesson(lesson)"
                         v-for="lesson in lessons"
                         style="cursor:pointer;">
                        <h5 :class="[ lesson.isEdited ? 'z-depth-4' : 'z-depth-1' ]">{{ '{{' }}lesson.name{{ '}}' }}</h5>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script></script>
<script>
    addLoadEvent(function () {
        {{ static('js/vue/lessonsVM.edit.min.js') }}
        lessonsVM.fetchLessons();
    });
</script>
<style>
    #lessons {
        margin-top    : 8vh;
    }

    .lesson-add-header::before {
        content : attr(data-text);
    }

    .lessons-attending h5 {
        padding    : .2em .4em;
        text-align : center;
        transition : background-color .1s, box-shadow .2s ease-in-out;
    }

    nav.datepicker--nav {
        width            : auto;
        background-color : transparent;
        color            : #000;
    }

    .datepicker--nav-title i {
        font-size : 1em;
    }
</style>
