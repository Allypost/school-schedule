var cp,inviteVM=new Vue({el:"#invite-user",data:{loading:!1,sexes:["male","female","intersex"],btnError:!1},computed:{sexez:function(){var t=[],e=this.sexes;for(var a in e)e.hasOwnProperty(a)&&t.push(e[a][0].toLowerCase());return t}},methods:{getFormData:function(){return $(this.$el).serializeObject()},getData:function(){var t=this.getFormData();return t.sex=t.sex||this.getSex(),t},getUrl:function(){return $(this.$el).attr("action")},getSex:function(){var t=$(this.$refs.sex).siblings().filter("input").val().trim()[0].toLowerCase(),e=this.sexez;for(var a in e)if(e.hasOwnProperty(a)&&t==e[a])return t;return null},send:function(t){var e=this,a=this.getData(),n=this.getUrl();e.loading=!0,$.post(n,a).done(function(t){var e=t.data,a=e.user,n="https://is.gd/create.php?format=json&callback=?&url=",i=n+encodeURIComponent(e.url),r="user-id-"+a.uuid,s=$("<div class='row swal-pre'><div class='col s12'> Name: <span data-inv-name></span></div><div class='col s12'>Email: <span data-inv-email></span></div><div class='col s12'>   ID: <span data-inv-id></span></div><div class='col s12'> Link: <a href='' data-inv-link>Creation link</a></div></div>");s.attr("id",r),s.find("span[data-inv-name]").text(a.name),s.find("span[data-inv-email]").text(a.email),s.find("span[data-inv-id]").text(a.uuid),s.find("a[data-inv-link]").attr("href",e.url),swal({title:"Invite created",html:s,type:"success",allowOutsideClick:!1,allowEscapeKey:!1}),$.getJSON(i,function(t){$("#"+r).append($('<div class="col s12">  URL: <button class="btn btn-flat btn-cpy" data-clipboard-text='+t.shorturl+">Click to copy</button></div>")),cp=cp||new Clipboard(".btn-cpy"),cp.on("success",function(){Materialize.toast("Copied to clipboard",1500,"status success")})})}).fail(function(t){t=t.responseJSON||{errors:["Something went wrong!"]};var a=t.errors;for(var n in a)a.hasOwnProperty(n)&&Materialize.toast(a[n],3e3,"status error");e.btnStatus("btnError")}).always(function(){e.loading=!1})},btnStatus:function(t){var e=this;this[t]=!0;var a=function(){e[t]=!1};return window.setTimeout(a,1500)}},components:{"input-field":{template:'<div class="input-field col" :class="[ cols ]"><input ref="input" :id="name | format" :class="{ \'validate\': validate }" :required="required" :aria-required="required" :name="name | format" :type="type" :value="value" @input="updateValue($event.target.value)"><label :for="name | format">{{ name }} {{ comment }}</label></div>',props:{name:{type:String},type:{type:String,"default":"text"},value:{type:String},comment:{type:String,"default":""},cols:{type:String,"default":"s12 m6"},validate:{type:Boolean,"default":!1},required:{type:Boolean,"default":!1}},methods:{updateValue:function(t){this.$emit("input",t)}},filters:{format:function(t){return t?t.toSpinalCase():""}}}},mounted:function(){var t=new Date;$("select").material_select(),$("#dob").datepicker({language:"en",maxDate:new Date((new Date).setFullYear(t.getFullYear()-7)),minDate:new Date((new Date).setFullYear(t.getFullYear()-100)),view:"years",autoClose:!0,dateFormat:"dd/mm/yyyy"})}});