var signupVM=new Vue({el:"#invite-user",data:{loading:!1,btnError:!1,btnSuccess:!1,password:"",repeatPassword:""},methods:{getUrl:function(){return $(this.$el).attr("action")},getFormData:function(){return $(this.$el).serializeObject()},getData:function(){var t=this.getFormData();return t},send:function(t){var e=this,n=this.getData(),r=this.getUrl();e.loading=!0,$.post(r,n).done(function(){Materialize.toast("You successfully signed up!",1500,"status success"),e.login(n.data),e.btnStatus("btnSuccess")}).fail(function(t){e.displayErrors(t),e.btnStatus("btnError")}).always(function(){e.loading=!1})},displayErrors:function(t){t=t.responseJSON||{errors:["Something went wrong!"]};var e=t.errors;for(var n in e)e.hasOwnProperty(n)&&Materialize.toast(e[n],3e3,"status error")},getUser:function(){return $(this.$el).attr("data-user")},getLoginUrl:function(){return $(this.$el).attr("data-login")},getLessonsUrl:function(){return $(this.$el).attr("data-lessons")},login:function(t){var e=this,n="click-to-log-user-in";swal({title:"Success!",html:"You've successfully signed up!<br>Now you're being logged in...",type:"info",confirmButtonText:"Log in",showLoaderOnConfirm:!0,confirmButtonClass:n,preConfirm:function(){return new Promise(function(t,n){var r=getCsrf(),s=e.getLoginUrl(),i={identifier:e.getUser(),password:e.password};i[r.key]=r.value,$.post(s,i).done(function(){t()}).fail(function(t){e.displayErrors(t),n("Things went amiss")})})},allowOutsideClick:!1,onOpen:function(){setTimeout(function(){$("."+n).click()},50)}}).then(function(){swal({type:"success",title:"You're ready to go",html:"Now you just need to select lessons you're gonna be attending",onClose:function(){window.location.href=e.getLessonsUrl()}})})},btnStatus:function(t,e){var n=this;this[t]=!0;var r=function(){n[t]=!1,isFunction(e)||(e=new Function),e(t)};return window.setTimeout(r,1500)}},computed:{passwordsMatch:function(){return this.password&&this.repeatPassword?this.password==this.repeatPassword:!0},submittable:function(){return this.password&&this.repeatPassword&&this.passwordsMatch}},components:{"input-field":{template:'<div class="input-field col" :class="[ cols ]">     <input :id="name | format" :class="{ \'validate\': validate, \'invalid\': invalid  }" :required="required" :aria-required="required"            :name="name | format" :type="type" :value="value" :disabled="disabled" @input="updateValue($event.target.value)">     <label :for="name | format" :data-error="error">{{ name }} {{ comment }}</label></div>',props:{name:{type:String},type:{type:String,"default":"text"},value:{type:String},comment:{type:String,"default":""},cols:{type:String,"default":"s12 m6"},validate:{type:Boolean,"default":!1},invalid:{type:Boolean,"default":!1},error:{type:String,"default":""},required:{type:Boolean,"default":!1},disabled:{type:Boolean,"default":!1}},methods:{updateValue:function(t){this.$emit("input",t)}},filters:{format:function(t){return t?t.toSpinalCase():""}}}}});