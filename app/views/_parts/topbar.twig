<nav class="topbar"
     data-notifications-list="{{ urlFor('api:notifications:list') }}" data-notifications-count="{{ urlFor('api:notifications:count') }}"
     data-notifications-seen="{{ urlFor('api:notifications:seen') }}">
    <div class="nav-wrapper">
        <a href="/" class="brand-logo">Logo</a>
        <a href="javascript:void(0)" data-activates="mobile-demo" class="button-collapse"><i class="material-icons">menu</i></a>
        <ul id="nav-mobile" class="right hide-on-med-and-down">
            {% if app.auth.isTeacher() %}
                <li><a href="{{ urlFor('user:invite') }}"><i class="material-icons left">share</i>Invite</a></li>
                <li class="divider"></li>
            {% endif %}
            <li><a href="{{ urlFor('home:home') }}"><i class="material-icons left">event</i>Schedule</a></li>
            <li><a href="{{ urlFor('lessons:home') }}"><i class="material-icons left">schedule</i>Lessons</a></li>
            <li class="divider"></li>
            <li>
                <a href="javascript:void(0)" data-activates="notifications-dropdown"
                   ref="dropdown" @click="dropdownToggle">
                    <i class="material-icons">notifications</i>
                    <span class="notification-count" :data-notifications="notificationCount > 0">{{ '{{' }} notificationCount{{ '}}' }}</span>
                </a>
            </li>
            <li><a href="{{ urlFor('auth:logout') }}"><i class="material-icons">&#xE8AC;</i></a></li>
        </ul>
        <ul class="side-nav" id="mobile-demo">
            <li class="logo"><a href="{{ urlFor('home:home') }}">Logo</a></li>
            <li class="bold"><a href="{{ urlFor('home:home') }}"><i class="material-icons left">event</i>Schedule</a></li>
            <li class="bold"><a href="{{ urlFor('lessons:home') }}"><i class="material-icons left">schedule</i>Lessons</a></li>
            <li class="bold"><a href="{{ urlFor('auth:logout') }}"><i class="material-icons left">&#xE8AC;</i>Logout</a></li>
        </ul>
    </div>
    <ul id="notifications-dropdown" class="dropdown-content">
        <template v-for="(notification, index) in notifications">
            <li><a :data-i="index + 1">{{ '{{' }}notification.message{{ '}}' }}</a></li>
        </template>
        <li class="divider"></li>
        <li><a href="{{ urlFor('notifications:view') }}" class="center-align">View all</a></li>
    </ul>
</nav>
<script>
    var topbarVM = new Vue({
        el     : '.topbar',
        data   : {
            notifications           : [],
            notificationCount       : 0,
            notificationCountLoading: false,
            notificationsLoading    : false
        },
        methods: {
            getListUrl      : function () {
                return this.$el.dataset.notificationsList;
            },
            getCountUrl     : function () {
                return this.$el.dataset.notificationsCount;
            },
            getData         : function () {
                if (this.notificationsLoading)
                    return;

                var vm  = this;
                var url = this.getListUrl();

                vm.notificationsLoading = true;

                $.get(url)
                 .done(function (data) {
                     var d = data.data;

                     vm.notifications        = d;
                     vm.notificationCount    = d ? d.length : 0;
                     vm.notificationsLoading = false;
                 });
            },
            getCount        : function () {
                if (this.notificationCountLoading)
                    return;

                var vm  = this;
                var url = this.getCountUrl();

                vm.notificationCountLoading = true;

                $.get(url)
                 .done(function (data) {
                     vm.notificationCount        = data.data.count;
                     vm.notificationCountLoading = false;
                 });
            },
            dropdownGet$    : function () {
                return $(this.$refs.dropdown);
            },
            dropdownToggle  : function () {
                var vm   = this;
                var el   = vm.$refs.dropdown;
                var url  = vm.$el.dataset.notificationsSeen;
                var data = {};
                var csrf = getCsrf();

                if (el.className.indexOf('active') < 0)
                    return this.getData();

                data[ csrf.key ] = csrf.value;

                $.post(url, data)
                 .done(function () {
                     vm.notificationCount = 0;
                 });
            },
            dropdownRegister: function () {
                this.dropdownGet$().dropdown(
                    {
                        inDuration     : 300,
                        outDuration    : 225,
                        constrain_width: false,
                        hover          : false,
                        gutter         : 0,
                        belowOrigin    : true,
                        alignment      : 'right'
                    }
                );
            }
        },
        mounted: function () {
            var vm = this;

            vm.dropdownRegister();
            $(".button-collapse").sideNav();

            $(document).ready(function () {
                vm.getData();
            });
        }
    });
</script>
