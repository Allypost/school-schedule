<div class="row">
    <div class="col s12">
        <div class="schedule z-depth-2 row">
            {% raw %}
                <div class="row schedule-week" :class="'week-' + week" v-for="(days, week) in sch">
                    <div class="row schedule-header">
                        <div class="col offset-s1"></div>
                        <div class="col s2 schedule-day" v-for="(periods, day) in days">{{ day | capitalize }}</div>
                    </div>
                    <div class="row schedule-days">
                        <div class="col offset-s1"></div>
                        <div class="col s2 schedule-day" v-for="(periods, day) in days">
                            <div class="col s12 schedule-hour" v-for="(data, period) in periods" :data-day="day" :data-week="week" :data-period="period"
                                 @click="pingy($event.srcElement)">
                                {{ data.hasClass ? data.name : '/' }}
                            </div>
                        </div>
                    </div>
                </div>
            {% endraw %}
        </div>
        <script>
            var scheduleMatrix = {};

            var weeks   = [ 'a', 'b' ];
            var days    = {{ days|json_encode|raw }};
            var periods = Array.apply(null, Array(5)).map(function (_, i) {
                return i + 1;
            });

            for (var week in weeks) {
                if (!weeks.hasOwnProperty(week))
                    continue;

                var w = weeks[ week ];

                if (!scheduleMatrix[ w ])
                    scheduleMatrix[ w ] = {};


                for (var day in days) {
                    if (!days.hasOwnProperty(day))
                        continue;

                    var d = days[ day ];

                    if (!scheduleMatrix[ w ][ d ])
                        scheduleMatrix[ w ][ d ] = {};


                    for (var period in periods) {
                        if (!periods.hasOwnProperty(period))
                            continue;

                        var p = periods[ period ];

                        scheduleMatrix[ w ][ d ][ p ] = { hasClass: false };
                    }
                }
            }

            var schedule = new Vue({
                el     : '.schedule',
                data   : {
                    week: '{{ week }}',
                    days: {{ days|json_encode|raw }},
                    sch : scheduleMatrix
                },
                filters: {
                    lower     : function (el) {
                        return el.toString().toLowerCase();
                    },
                    capitalize: function (value) {
                        if (!value) return '';
                        value = value.toString();
                        return value.charAt(0).toUpperCase() + value.slice(1);
                    }
                },
                methods: {
                    pingy: function (el) {
                        var data = el.dataset;
                        console.log(data.day + '-' + data.week + '-' + data.period);
                    }
                }
            });

            $.get('{{ urlFor('api:lessons:schedule') }}')
             .done(function (data) {
                 var classes = data.data;
                 for (var c in classes) {
                     if (!classes.hasOwnProperty(c))
                         continue;

                     var cl = classes[ c ];
                     var w  = cl.week;
                     var d  = cl.day;
                     var p  = cl.period;

                     cl.hasClass = true;

                     scheduleMatrix[ w ][ d ][ p ] = cl;
                 }
             })
             .fail(function () {
                 Materialize.toast("Couldn't get schedule!", 3000, 'status error');
             });
        </script>
        <style>
            .schedule {
                /*border  : 3px solid rgba(0, 0, 0, .2);*/
                padding : 1em;
            }

            .schedule .schedule-header .schedule-day {
                font-weight : bold;
                text-align  : center;
                font-size   : 1.5em;
                border-top  : 0 transparent;
            }

            .schedule .schedule-day {
                border        : 1px solid #ddd;
                border-bottom : 0 transparent;
            }

            .schedule .schedule-hour {
                border-bottom : 1px solid #ddd;
                text-align    : center;
                position      : relative;
            }

            .schedule .schedule-hour::before {
                content       : attr(data-period);
                display       : inline-block;
                position      : absolute;
                left          : 0;
                top           : .2em;
                border-right  : 1px solid;
                padding       : 0 .5em;
                line-height   : .9em;
                border-radius : 2px;
                opacity       : .4;
            }

            .schedule .schedule-week.week-a::before,
            .schedule .schedule-week.week-b::before {
                display     : table-cell;
                position    : absolute;
                left        : 0;
                height      : 100%;
                line-height : 2.5em;
                font-size   : 4em;
                font-weight : 100;
                opacity     : .2;
            }

            .schedule .schedule-week.week-a::before {
                content : 'A:';
            }

            .schedule .schedule-week.week-b::before {
                content : 'B:';
            }

            .schedule .schedule-hour:last-child {
                border-bottom : 0 transparent;
            }

            .schedule .schedule-header, .schedule .schedule-days, .schedule .schedule-week {
                position : relative;
                margin   : 0;
            }
        </style>
    </div>
</div>
