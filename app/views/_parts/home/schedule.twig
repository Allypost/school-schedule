{% block head %}
    <link rel="stylesheet" href="/css/schedule.css?v=1.7">
{% endblock %}

{% set isTeacher = app.auth.isTeacher() %}

<div class="row">
    <div class="col s12">
        <div id="schedule" class="z-depth-2 row"
             data-teacher="{{ isTeacher|raw }}"
             data-schedule="{{ urlFor('api:lessons:schedule') }}" data-status="{{ urlFor('api:lessons:update:status') }}"
             data-teaching="{{ urlFor('api:lessons:teaching') }}" data-subject="{{ urlFor('api:lessons:update') }}">
            <div id="loader" class="row center-align" :data-loaded="isLoaded">
                <div class="preloader-wrapper big active">
                    <div class="spinner-layer spinner-blue-only">
                        <div class="circle-clipper left">
                            <div class="circle"></div>
                        </div>
                        <div class="gap-patch">
                            <div class="circle"></div>
                        </div>
                        <div class="circle-clipper right">
                            <div class="circle"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row schedule-week"
                 :data-loaded="isLoaded"
                 :class="'week-' + week" :data-week="week + ':'"
                 v-for="(days, week) in schedule">
                <div class="row schedule-header">
                    <div class="col offset-s1"></div>
                    <div class="col s2 schedule-day"
                         v-for="(periods, day) in days">
                        {{ '{{' }} day | capitalize {{ '}}' }}
                    </div>
                </div>
                {% raw %}
                    <div class="row schedule-days">
                        <div class="col offset-s1"></div>
                        <div class="col s2 schedule-day"
                             v-for="(periods, day) in days">
                            <div class="col s12 schedule-hour"
                                 :data-period="period" :class="{ 'schedule-teacher': isTeacher }"
                                 v-for="(data, period) in periods">
                                <template v-if="isTeacher">
                                    <span :data-day="day" :data-week="week" :data-period="period">
                                        <template v-if="!data.owned && data.hasClass">
                                            {{ data.name }}
                                        </template>
                                        <template v-else>
                                            <span class="schedule-hour-loading"
                                                  v-if="data.isLoading"></span>
                                            <select class="browser-default"
                                                    :disabled="data.isLoading"
                                                    @change="subjectChange($event.currentTarget.options, data, { week: week, day: day, period: period })">
                                                <option :value="subject.id" :selected="data.hasClass && (data.name == subject.name)"
                                                        v-for="subject in teaching">{{ subject.name }}</option>
                                            </select>
                                            <span class="schedule-status dropdown-button"
                                                  :class="'status-' + (data.status ? data.status : 'normal') | lower"
                                                  :data-activates="'dropdown-' + week + '-' + day + '-' + period"
                                                  v-show="data.hasClass && !data.isLoading">!</span>
                                            <ul class='dropdown-content'
                                                :id="'dropdown-' + week + '-' + day + '-' + period">
                                                <li @click="setStatus(data, status, { week: week, day: day, period: period })"
                                                    v-for="(status, name) in statuses">
                                                    <a :class="'status-' + name | lower">{{ name }}</a>
                                                </li>
                                            </ul>
                                        </template>
                                    </span>
                                </template>
                                <template v-else>
                                    <span :data-day="day" :data-week="week" :data-period="period" :data-status="data.hasClass ? data.status : false">{{ data.hasClass ? data.name : '/' }}</span>
                                </template>
                            </div>
                        </div>
                    </div>
                {% endraw %}
            </div>
        </div>
        <script>
            addLoadEvent(function () {
                {{ source('_parts/__VueVMs/scheduleVM.min.js') }}
            });
        </script>
    </div>
</div>
